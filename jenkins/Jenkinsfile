pipeline {
    agent {
        docker {
            image 'maven:3-alpine'
            args '-v /root/.m2:/root/.m2'
        }
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh """
                	echo 'The following Maven command installs your Maven-built Java application'
                	echo 'into the local Maven repository, which will ultimately be stored in'
                	echo 'Jenkins''s local Maven repository (and the maven-repository Docker data'
                	echo 'volume).'
                	set -x
                	mvn jar:jar install:install help:evaluate -Dexpression=project.name -X
                	set +x
                	echo 'The following complex command extracts the value of the <name/> element'
                	echo 'within <project/> of your Java/Maven project''s pom.xml file.'                	
                	echo 'The following complex command behaves similarly to the previous one but'
                	echo 'extracts the value of the <version/> element within <project/> instead.'                	
                	echo 'The following command runs and outputs the execution of your Java'
                	echo 'application (which Jenkins built using Maven) to the Jenkins UI.'
                	set -x
                	java -jar target/*.jar
                	
                """
            }
        }
    }
}
